// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/labstack/echo/v4"
	"go-social/cmd/post/config"
	"go-social/internal/pkg/database"
	"go-social/internal/post/app/route"
	"go-social/internal/post/usecase/post"
)

// Injectors from wire.go:

func Init(config2 *config.Config) (*App, error) {
	echoEcho := echo.New()
	postgresConfig := CatPostgresConfig(config2)
	dataContext := database.NewPgContext(postgresConfig)
	repository := post.NewPgRepository(dataContext)
	usecase := post.NewService(repository)
	routeRoot := route.NewRoute(echoEcho, usecase)
	app := NewApp(config2, echoEcho, routeRoot, dataContext, repository, usecase)
	return app, nil
}

// wire.go:

func CatPostgresConfig(config2 *config.Config) *database.PostgresConfig {
	return &config2.PostgresConfig
}
