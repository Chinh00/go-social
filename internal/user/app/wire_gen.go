// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package app

import (
	"github.com/labstack/echo/v4"
	"go-social/cmd/user/config"
	"go-social/internal/pkg/redis"
	"go-social/internal/user/app/route"
	"go-social/internal/user/usecase/user"
)

// Injectors from wire.go:

func Init(config2 *config.Config) (*App, error) {
	redisOption := CatRedisOption(config2)
	service := user.NewRedisServiceSet(redisOption)
	usecase := user.NewService(service)
	echoEcho := echo.New()
	routeRoot := route.NewRoute(echoEcho, usecase)
	app, err := NewApp(config2, usecase, echoEcho, service, routeRoot)
	if err != nil {
		return nil, err
	}
	return app, nil
}

// wire.go:

func CatRedisOption(config2 *config.Config) *redis.RedisOption {
	return &config2.RedisOption
}
